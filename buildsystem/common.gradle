// Common android gradle configuration

android {

    compileSdkVersion androidCompileSdkVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode readVersionCode()
        versionName readVersionName()
        //vectorDrawables.useSupportLibrary = true
        //multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        //Some libraries have issues with this.
        disable 'InvalidPackage'
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        //disable 'IconDensities'
        //For testing purpose. This is safe to remove.
        //disable 'IconMissingDensityFolder'
        //For testing purpose. This is safe to remove.
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled = false
        }
    }

    testOptions {

        //unitTests.returnDefaultValues = true

        // Always show the result of every unit test, even if it passes.
        unitTests {
            // Robolectric
            includeAndroidResources = true
            all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                    outputs.upToDateWhen { false }
                    showStandardStreams = true
                }
            }
        }
    }

}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-v4:${supportVersion}"
    resolutionStrategy.force "com.android.support:support-annotations:${supportVersion}"
}
